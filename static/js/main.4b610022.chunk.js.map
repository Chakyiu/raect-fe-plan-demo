{"version":3,"sources":["app/data/template.js","components/FEForm.js","components/FEPlan.js","App.js","reportWebVitals.js","index.js"],"names":["template","plan","name","element","General","Specialist","Physiotherapy","price","FEForm","inputString","setInputString","setJsonInput","submitOnClick","useState","jsonValidated","setJsonValidated","isFailClick","setIsFailClick","alertMessage","normal","warning","JSON","stringify","undefined","useEffect","checkJsonValidation","setTimeout","tempJSON","parse","isWrongSyntax","hasOwnProperty","length","forEach","e","Form","className","Group","controlId","Control","as","rows","placeholder","onChange","target","value","Alert","variant","Button","onClick","FEPlan","data","setIsShow","elementList","setElementList","selectedPlan","setSelectedPlan","tempList","Object","keys","indexOf","push","selectOnChange","id","onSubmit","preventDefault","alert","Table","responsive","hover","map","p","Check","type","label","App","jsonInput","isShow","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b610022.chunk.js","sourcesContent":["var template = {\r\n  plan: [\r\n    {\r\n      name: \"Standard Plan\",\r\n      element: {\r\n        General: true,\r\n        Specialist: true,\r\n        Physiotherapy: false,\r\n      },\r\n      price: 0,\r\n    },\r\n    {\r\n      name: \"Premium Plan\",\r\n      element: {\r\n        General: true,\r\n        Specialist: false,\r\n      },\r\n      price: 388,\r\n    },\r\n  ],\r\n};\r\n\r\nexport default template;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport \"./FEForm.scss\";\r\nimport template from \"../app/data/template\";\r\n\r\nfunction FEForm({ inputString, setInputString, setJsonInput, submitOnClick }) {\r\n  const [jsonValidated, setJsonValidated] = useState(false);\r\n  const [isFailClick, setIsFailClick] = useState(false);\r\n\r\n  const alertMessage = {\r\n    normal: \"JSON format correct.\",\r\n    warning:\r\n      \"JSON format incorrect\\n\" +\r\n      \"sample format are:\\n\" +\r\n      JSON.stringify(template, undefined, \"\\t\"),\r\n  };\r\n\r\n  useEffect(() => {\r\n    setJsonValidated(checkJsonValidation());\r\n  }, [inputString]);\r\n\r\n  useEffect(() => {\r\n    if (isFailClick) setTimeout(() => setIsFailClick(false), 500);\r\n  }, [isFailClick]);\r\n\r\n  const checkJsonValidation = () => {\r\n    try {\r\n      var tempJSON = JSON.parse(inputString);\r\n      var isWrongSyntax = false;\r\n\r\n      if (!tempJSON.hasOwnProperty(\"plan\")) isWrongSyntax = true;\r\n      if (tempJSON[\"plan\"].length === 0) isWrongSyntax = true;\r\n\r\n      tempJSON[\"plan\"].forEach((e) => {\r\n        if (!e.hasOwnProperty(\"name\")) isWrongSyntax = true;\r\n        if (!e.hasOwnProperty(\"element\")) isWrongSyntax = true;\r\n        if (!e.hasOwnProperty(\"price\")) isWrongSyntax = true;\r\n      });\r\n\r\n      if (isWrongSyntax) return false;\r\n      setJsonInput(tempJSON);\r\n    } catch {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    setInputString(e.target.value);\r\n  };\r\n\r\n  const onClickHandler = () => {\r\n    if (jsonValidated) submitOnClick();\r\n    else setIsFailClick(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form className={`w-75 h-75 fe-form ${isFailClick ? \"shake\" : \"\"}`}>\r\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={20}\r\n            // placeholder=\"Input JSON here...\"\r\n            placeholder=\"Input JSON here...\"\r\n            onChange={onChangeHandler}\r\n            value={inputString}\r\n          />\r\n        </Form.Group>\r\n        <Alert variant={jsonValidated ? \"primary\" : \"danger\"}>\r\n          {jsonValidated ? alertMessage[\"normal\"] : alertMessage[\"warning\"]}\r\n        </Alert>\r\n        <Button variant=\"primary\" onClick={onClickHandler}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FEForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Table, Form } from \"react-bootstrap\";\r\nimport \"./FEPlan.scss\";\r\n\r\nfunction FEPlan({ data, setIsShow }) {\r\n  const [elementList, setElementList] = useState([]);\r\n  const [selectedPlan, setSelectedPlan] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    let tempList = [];\r\n    data.plan.forEach((e) => {\r\n      Object.keys(e.element).forEach((e) => {\r\n        if (tempList.indexOf(e) === -1) {\r\n          tempList.push(e);\r\n        }\r\n      });\r\n      setElementList(tempList);\r\n    });\r\n  }, [data]);\r\n\r\n  const backOnClick = () => {\r\n    setIsShow(false);\r\n  };\r\n\r\n  const selectOnChange = (e) => {\r\n    setSelectedPlan(e.target.id);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    alert(`${selectedPlan} Selected.`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"w-75 h-75\">\r\n        <div className=\"text-center h1 m-4\">Choose a plan</div>\r\n        <Form onSubmit={onSubmit}>\r\n          <Table responsive hover>\r\n            <thead>\r\n              <tr>\r\n                <th />\r\n                {data.plan.map((p) => (\r\n                  <th key={p.name} className=\"text-center h4 pb-4\">\r\n                    {p.name}\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {elementList.map((e) => (\r\n                <tr key={e}>\r\n                  <td className=\"h4 py-3\">{e}</td>\r\n                  {data.plan.map((p) =>\r\n                    p.element[e] ? (\r\n                      <td key={p.name} className=\"text-center py-3\">\r\n                        ✔\r\n                      </td>\r\n                    ) : (\r\n                      <td key={p.name} className=\"text-center py-3\">\r\n                        ✘\r\n                      </td>\r\n                    )\r\n                  )}\r\n                </tr>\r\n              ))}\r\n              <tr>\r\n                <td />\r\n                {data.plan.map((p) => (\r\n                  <td key={p.name} className=\"py-3\">\r\n                    <Form.Check\r\n                      className=\"d-flex justify-content-center price-tag\"\r\n                      type=\"radio\"\r\n                      name=\"check-plan\"\r\n                      id={`${p.name}`}\r\n                      label={`HK$${p.price} `}\r\n                      onChange={selectOnChange}\r\n                    />\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            </tbody>\r\n          </Table>\r\n          <Button variant=\"primary\" onClick={backOnClick}>\r\n            Back\r\n          </Button>\r\n          <Button className=\"btn-submit\" variant=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FEPlan;\r\n","import React, { useState } from \"react\";\n\nimport \"./App.scss\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport FEForm from \"./components/FEForm\";\nimport FEPlan from \"./components/FEPlan\";\n\nfunction App() {\n  const [inputString, setInputString] = useState(\"\");\n  const [jsonInput, setJsonInput] = useState({});\n  const [isShow, setIsShow] = useState(false);\n\n  const submitOnClick = () => {\n    setIsShow(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n        {isShow ? (\n          <FEPlan data={jsonInput} setIsShow={setIsShow} />\n        ) : (\n          <FEForm\n            inputString={inputString}\n            setInputString={setInputString}\n            setJsonInput={setJsonInput}\n            submitOnClick={submitOnClick}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}